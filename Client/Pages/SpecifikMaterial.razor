@page "/specifikMaterial/{id}"
@attribute [Authorize]
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager



<PageTitle>SpecifikMaterial </PageTitle>

<h1> The chosen materials id is @Id </h1>
<hr>

@if (material == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2> Author Id is @material.AuthorId </h2>
    <div class="container">
        <div class="row">
            <div class="col border border-dark">
                <h1> @material.Name</h1>
            </div>
            <div class="col border border-dark">           
                <h2 >Rating : @material.Rating</h2>
            </div>
        </div>
        <div class="row">
            <div class="col border border-dark">
               <p>@material.Description</p>
            </div>
            <div class="col border border-dark">
                <h3 class="font-weight-bold">Tags</h3>
                <ul class="mr-3 mt-3">
                    @foreach (var tag in material.Tags)
                    {
                        <li>@tag.TagName</li>
                    }  
                </ul>
            </div>
        </div>
    </div>


   


<hr>
    <p>Open a @material.FileType file <a href=@material.FilePath>example</a>.</p>
    <h1>PDF Example with iframe</h1>
    <iframe src=@material.FilePath width="80%" height="1000px"/>

<hr>
   <h1>Recommended Material</h1>
        @if (recommendedMaterial == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {

            <table class="table">
                <thead>
                    <tr>
                        <th>Material Id</th>
                        <th>Title</th>
                        <th>Decription</th>
                        <th>Tags</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var material in recommendedMaterial)
                    {
                        <tr>
                            <td>@material.Id</td>
                            <td>@material.Name</td>
                            <td>@material.Description</td>
                            <td>
                                <ul>
                                    @foreach (var tag in material.Tags)
                                    {
                                        <li>
                                            @tag.TagName
                                        </li>
                                    }
                                </ul> 
                            </td>
                            <td><button class="btn btn-info">View</button></td>
                        </tr>
                    }
                </tbody>
            </table> 
        }
        <hr>
        <h1>CommentSection</h1>

          <table class="table">
            <thead>
                <tr>
                    <th>Write a Comment</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                    <tr>
                        <td> <textarea class="form-control" id="exampleFormControlTextarea1" rows="3"></textarea></td>
                        <td><button class="btn btn-info">Comment</button></td>
                    </tr>
                
            </tbody>
        </table> 
    <CommentSection MaterialID=@material.Id/>
}


@code {

  [Parameter]
    public string Id { get; set; }
public DetailsMaterialDTO? material;

public List<DetailsMaterialDTO>? recommendedMaterial;

    protected override async Task OnInitializedAsync()
    {
        material = await Http.GetFromJsonAsync<DetailsMaterialDTO>($"api/Material/Specifik/{Id}");  
        
        recommendedMaterial = await Http.GetFromJsonAsync<List<DetailsMaterialDTO>>($"api/Material/Material/{Id}");  

            // Test Material and recommendedMaterial
         // material = await MaterialSetup.setUptestasync(Id);
          // recommendedMaterial = await MaterialSetup.SetUpTestMaterialasync();

             
    }
}