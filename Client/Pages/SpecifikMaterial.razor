@page "/specifikMaterial/{id}"


<PageTitle>SpecifikMaterial </PageTitle>


<h1> The chosen materials id is @Id </h1>


@if (material == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1> @material.Name</h1>
    <h2> The Author of this material is @material.AuthorId </h2>
    <h2>@GetRatings(material.Ratings)</h2>
    <p>@material.Description</p>
    <ul>
         @foreach (var tag in material.Tags)
        {
            <li>@tag.TagName</li>

        }  

    </ul>



    <p>Open a @material.FileType file <a href=@material.FilePath>example</a>.</p>
    <h1>PDF Example with iframe</h1>
        <iframe src=@material.FilePath width="80%" height="1000px">
        </iframe>

   <h1>Recommended Material</h1>
    <table class="table">
            <thead>
                <tr>
                    <th>Material Id</th>
                    <th>Title</th>
                    <th>Decription</th>
                    <th>Tags</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var material in recommendedMaterial)
                {
                    <tr>
                        <td>@material.Id</td>
                        <td>@material.Name</td>
                        <td>@material.Description</td>
                        <td>
                            <ul>
                                @foreach (var tag in material.Tags)
                                {
                                    <li>
                                        @tag.TagName
                                    </li>
                                }
                            </ul> 
                        </td>
                        <td><button class="btn btn-info">View</button></td>
                    </tr>
                }
            </tbody>
        </table> 
    @* @foreach (var comment in comments)
    {

    }  *@
}

@code {

  [Parameter]
    public string Id { get; set; }
public DetailsMaterialDTO material;

public int GetRatings(IDictionary<string, int> Ratings){

    
    return MaterialSetup.GetRatingsAvg(Ratings);
}
public List<DetailsMaterialDTO> recommendedMaterial;


    protected override async Task OnInitializedAsync()
    {
        material = await MaterialSetup.setUptestasync(Id);
        recommendedMaterial = await MaterialSetup.SetUpTestMaterialasync();

    }
}
